<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/tx  
    					http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!--  
	<bean id="userService" class="com.myfirstmvnpro.service.UserService">
		<property name="userDao" ref="userDao"/>
	</bean>
	<bean id="userDao" class="com.myfirstmvnpro.dao.impl.UserDaoImpl">
	
	</bean>-->
	<context:component-scan base-package="com.mybbs" use-default-filters="true">
		<!-- 通过exclude-filter 把所有 @Controller注解的表现层控制器组件排除 -->
		<context:exclude-filter type="regex" expression=".*Controller$"/>
	</context:component-scan>	
	<context:annotation-config/>
	<!--  
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/> -->
	<!-- 构造注入循环引用测试 
	<bean id="user" name="myuser;myuser2" class="com.myfirstmvnpro.domain.User"
		   p:id="4"
		   p:name="useP"
		   p:username="usernameP"
		   p:email="user@qq.com"
		   p:password="user"
	/>-->
		<!-- 
		<property name="id" value="1"/>
		<property name="name" value="liuguo"/>
		<property name="username" value="lg"/>
		<property name="email" value="123@qq.com"/>
		<property name="password" value="123456"/>
		 
		<constructor-arg ref="userWithCons2"/>
	
	</bean>-->
	
	<!-- 静态内部内测试
	<bean id="innerLocation" class="com.myfirstmvnpro.domain.UserWithInner$Location">
		<property name="princes" value="四川"/>
		<property name="city" value="江油"/>
	</bean> -->
	<!-- 工厂方法测试 
	<bean id="userService" class="com.myfirstmvnpro.service.UserService" factory-method="create">
		
	</bean>-->
	<!-- 构造方法测试 
	<bean id="userWithCons" class="com.myfirstmvnpro.domain.UserWithCons" factory-method="create">
		<property name="id" value="2"/>
		<constructor-arg index="0" value="1"/>
		<constructor-arg index="1" value="zht"/>
		<constructor-arg index="2" value="zhanght"/>
		<constructor-arg index="3" value="zht@qq.com"/>
	</bean>
	
	<bean id="userWithCons2" class="com.myfirstmvnpro.domain.UserWithCons" p:user-ref="user">-->
		<!--  <constructor-arg  ref="user"/>
		<property name="user">
			<ref bean="user"/>
		</property>-->
		<!--  嵌套属性设置，user不能为null
		<property name="user.id" value="5"/>
		-->
		<!--List测试  
		<property name="userList">
			<list>
				<ref bean="user"/>
			</list>
		</property>-->
		<!-- map测试 
		<property name="map">
			<map>
				<entry key="1" value="haha1"/>
				<entry key="2" value="haha2"/>
				<entry key="3" value="haha3"/>
			</map>
		</property>
		
	</bean>-->
	<!-- hibernate异常转Spring异常 -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	<!-- 配置hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<!--  
				<prop key="hibernate.current_session_context_class">thread</prop>-->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 解决hibernate 中的Jar包与应用服务器冲突// -->
				<prop key="hibernate.validator.apply_to_ddl">false</prop>
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.myfirstmvnpro.domain.**" />
	</bean>
	<!-- 引用properties配置文件 -->
	<bean id="propertyConfig"
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<!-- typed as a java.util.Properties -->
		<property name="locations">
			<list>
				<!-- <value>/WEB-INF/mail.properties</value> -->
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 事务管理器配置, Hibernate单数据源事务 -->
    <bean id="transactionManager"  
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
    
    <!-- 开启事务管理注解 -->  
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!--  
    <aop:config>  
        <aop:pointcut id="serviceMethod"  
                      expression="execution(public * com.myfirstmvnpro..*Service.*(..))"/>  
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>  
    </aop:config>  
  
    <tx:advice id="txAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="*"/>  
        </tx:attributes>  
    </tx:advice>-->
</beans>